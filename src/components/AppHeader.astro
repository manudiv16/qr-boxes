---
// Enhanced app header with smart navigation
import { SignedIn, SignedOut, UserButton, SignInButton } from '@clerk/astro/components';

interface Props {
    currentPage?: 'home' | 'dashboard';
}

const { currentPage = 'home' } = Astro.props;
---

<header class="bg-white shadow-sm border-b sticky top-0 z-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center py-4">
            <!-- Logo and Main Navigation -->
            <div class="flex items-center space-x-8">
                <!-- Logo and Brand -->
                <div class="flex items-center group transition-all duration-200 hover:scale-105">
                    <!-- Smart Logo Navigation - Goes to appropriate home based on auth state -->
                    <SignedOut>
                        {currentPage === 'home' ? (
                            <!-- No link when already on home -->
                            <div class="flex items-center mr-3 p-1 rounded-lg cursor-default">
                                <div class="flex items-center justify-center h-10 w-10 bg-gradient-to-r from-blue-600 to-blue-400 text-white rounded-xl shadow-md">
                                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
                                    </svg>
                                </div>
                            </div>
                        ) : (
                            <!-- Link to home when not on home -->
                            <a href="/" class="flex items-center mr-3 p-1 rounded-lg hover:bg-gray-50 transition-colors"
                               title="Go to Home">
                                <div class="flex items-center justify-center h-10 w-10 bg-gradient-to-r from-blue-600 to-blue-400 text-white rounded-xl shadow-md group-hover:shadow-lg transition-shadow">
                                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
                                    </svg>
                                </div>
                            </a>
                        )}
                    </SignedOut>
                    <SignedIn>
                        {currentPage === 'dashboard' ? (
                            <!-- No link when already on dashboard -->
                            <div class="flex items-center mr-3 p-1 rounded-lg cursor-default">
                                <div class="flex items-center justify-center h-10 w-10 bg-gradient-to-r from-blue-600 to-blue-400 text-white rounded-xl shadow-md">
                                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
                                    </svg>
                                </div>
                            </div>
                        ) : (
                            <!-- Link to dashboard when not on dashboard -->
                            <a href="/dashboard" class="flex items-center mr-3 p-1 rounded-lg hover:bg-gray-50 transition-colors"
                               title="Go to Dashboard">
                                <div class="flex items-center justify-center h-10 w-10 bg-gradient-to-r from-blue-600 to-blue-400 text-white rounded-xl shadow-md group-hover:shadow-lg transition-shadow">
                                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
                                    </svg>
                                </div>
                            </a>
                        )}
                    </SignedIn>
                    
                    <!-- Simple Title -->
                    <div class="flex flex-col">
                        <h1 class="text-xl font-bold text-gray-900">
                            QR Boxes
                        </h1>
                        <p class="text-xs text-gray-500 leading-tight">
                            Smart organization
                        </p>
                    </div>
                </div>

                <!-- Navigation Links -->
                <nav class="hidden md:flex items-center space-x-6">
                    <a 
                        href="/" 
                        class={`flex items-center text-sm font-medium transition-colors hover:text-blue-600 ${
                            currentPage === 'home' 
                                ? 'text-blue-600 border-b-2 border-blue-600 pb-1' 
                                : 'text-gray-600'
                        }`}
                        title="Go to Home (Ctrl+H)"
                    >
                        <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
                        </svg>
                        Home
                        {currentPage === 'home' && (
                            <span class="ml-1 text-xs bg-blue-100 text-blue-600 px-1.5 py-0.5 rounded-full">Current</span>
                        )}
                    </a>
                    <SignedIn>
                        <a 
                            href="/dashboard" 
                            class={`flex items-center text-sm font-medium transition-colors hover:text-blue-600 ${
                                currentPage === 'dashboard' 
                                    ? 'text-blue-600 border-b-2 border-blue-600 pb-1' 
                                    : 'text-gray-600'
                            }`}
                            title="Go to Dashboard (Ctrl+D)"
                        >
                            <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6zM16 13a1 1 0 011-1h2a1 1 0 011 1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-6z"></path>
                            </svg>
                            Dashboard
                            {currentPage === 'dashboard' && (
                                <span class="ml-1 text-xs bg-blue-100 text-blue-600 px-1.5 py-0.5 rounded-full">Current</span>
                            )}
                        </a>
                    </SignedIn>
                </nav>
            </div>

            <!-- Auth Section -->
            <div class="flex items-center space-x-4">
                <SignedOut>
                    <SignInButton 
                        mode="modal" 
                        class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition-colors shadow-sm hover:shadow-md"
                    >
                        Sign In
                    </SignInButton>
                </SignedOut>
                
                <SignedIn>
                    <!-- Dashboard-specific controls -->
                    {currentPage === 'dashboard' && (
                        <div class="flex items-center space-x-2">
                            <button
                                id="refresh-btn"
                                class="p-2 bg-gray-100 hover:bg-gray-200 text-gray-600 rounded-lg transition-colors"
                                title="Refresh boxes"
                            >
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                                </svg>
                            </button>
                        </div>
                    )}
                    
                    <!-- Mobile menu button for signed in users -->
                    <button 
                        id="mobile-menu-button"
                        class="md:hidden p-2 rounded-lg text-gray-600 hover:text-gray-900 hover:bg-gray-100 transition-colors"
                        aria-label="Open menu"
                    >
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                        </svg>
                    </button>
                    
                    <!-- User Button -->
                    <div class="flex items-center">
                        <UserButton 
                            appearance={{
                                elements: {
                                    avatarBox: "w-8 h-8",
                                    userButtonPopoverCard: "shadow-xl border",
                                    userButtonPopoverActionButton: "hover:bg-gray-50"
                                }
                            }}
                        />
                    </div>
                </SignedIn>
            </div>
        </div>

        <!-- Mobile Navigation Menu -->
        <SignedIn>
            <div id="mobile-menu" class="md:hidden hidden border-t border-gray-200 py-3">
                <nav class="flex flex-col space-y-2">
                    <a 
                        href="/" 
                        class={`flex items-center px-3 py-2 text-sm font-medium rounded-lg transition-colors ${
                            currentPage === 'home' 
                                ? 'bg-blue-50 text-blue-600 border-l-2 border-blue-600' 
                                : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'
                        }`}
                    >
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
                        </svg>
                        Home
                    </a>
                    <a 
                        href="/dashboard" 
                        class={`flex items-center px-3 py-2 text-sm font-medium rounded-lg transition-colors ${
                            currentPage === 'dashboard' 
                                ? 'bg-blue-50 text-blue-600 border-l-2 border-blue-600' 
                                : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'
                        }`}
                    >
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6zM16 13a1 1 0 011-1h2a1 1 0 011 1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-6z"></path>
                        </svg>
                        Dashboard
                    </a>
                </nav>
            </div>
        </SignedIn>
    </div>
</header>

<script>
    // Mobile menu toggle
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    
    mobileMenuButton?.addEventListener('click', () => {
        mobileMenu?.classList.toggle('hidden');
        
        // Update aria-expanded attribute
        const isExpanded = !mobileMenu?.classList.contains('hidden');
        mobileMenuButton?.setAttribute('aria-expanded', isExpanded.toString());
        
        // Update button icon
        const svg = mobileMenuButton?.querySelector('svg');
        if (svg) {
            if (isExpanded) {
                svg.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>';
            } else {
                svg.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>';
            }
        }
    });

    // Close mobile menu when clicking outside
    document.addEventListener('click', (e) => {
        const target = e.target as Element;
        if (!target.closest('#mobile-menu') && !target.closest('#mobile-menu-button')) {
            mobileMenu?.classList.add('hidden');
            mobileMenuButton?.setAttribute('aria-expanded', 'false');
            
            // Reset button icon
            const svg = mobileMenuButton?.querySelector('svg');
            if (svg) {
                svg.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>';
            }
        }
    });

    // Smart keyboard navigation
    document.addEventListener('keydown', (e) => {
        // Only trigger if user is not typing in an input field
        if (e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement) {
            return;
        }

        // Ctrl+H for Home, Ctrl+D for Dashboard
        if (e.ctrlKey || e.metaKey) {
            if (e.key === 'h' || e.key === 'H') {
                e.preventDefault();
                window.location.href = '/';
            } else if (e.key === 'd' || e.key === 'D') {
                e.preventDefault();
                window.location.href = '/dashboard';
            }
        }
    });

    // Smart navigation analytics (optional - track user navigation patterns)
    function trackNavigation(from: string, to: string, method: 'click' | 'keyboard') {
        // This could send analytics to understand how users navigate
        console.log(`Navigation: ${from} → ${to} via ${method}`);
    }

    // Add navigation tracking to title clicks
    document.addEventListener('DOMContentLoaded', () => {
        const titleLink = document.querySelector('a[title*="Go to"]');
        titleLink?.addEventListener('click', (e) => {
            const currentPage = window.location.pathname === '/' ? 'home' : 'dashboard';
            const targetPage = currentPage === 'home' ? 'dashboard' : 'home';
            trackNavigation(currentPage, targetPage, 'click');
        });
    });
</script>

---
// BoxCard component - Reusable box display component
export interface BoxCardProps {
    box: {
        id: string;
        name: string;
        room?: string;
        description?: string;
        items?: string[];
        createdAt: string;
        compartmentId?: string;
    };
}

const { box } = Astro.props as BoxCardProps;
---

<div class="bg-white border border-gray-100 rounded-xl shadow-sm hover:shadow-md transition-all">
    <div class="p-5">
        <div class="flex items-start justify-between mb-2">
            <div class="flex-1">
                <h4 class="text-lg font-bold text-gray-900">{box.name}</h4>
                {box.compartmentId ? (
                    <div class="flex items-center mt-1">
                        <svg class="w-3 h-3 text-green-600 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.196-2.121M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.196-2.121M7 20v-2c0-.656.126-1.283.356-1.857M7 20a3 3 0 013-3h4a3 3 0 013 3z"></path>
                        </svg>
                        <span class="text-xs text-green-600 font-medium">Shared in compartment</span>
                    </div>
                ) : (
                    <div class="flex items-center mt-1">
                        <svg class="w-3 h-3 text-gray-400 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                        </svg>
                        <span class="text-xs text-gray-400 font-medium">Personal box</span>
                    </div>
                )}
            </div>
            {box.room && (
                <span class="inline-flex items-center bg-blue-100 text-blue-800 text-xs font-medium px-2 py-1 rounded-full">
                    <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                    </svg>
                    {box.room}
                </span>
            )}
        </div>
        
        {box.description && (
            <p class="text-sm text-gray-600 mb-3 line-clamp-2">{box.description}</p>
        )}
        
        <div class="flex items-center text-sm text-gray-500 mb-3">
            <span class="font-medium">{box.items?.length || 0} items</span>
            <span class="mx-2">â€¢</span>
            <span class="text-xs">{new Date(box.createdAt).toLocaleDateString()}</span>
        </div>

        <div class="flex flex-wrap gap-1 mb-3">
            {box.items && box.items.length > 0 ? (
                <>
                    {box.items.slice(0, 3).map((item: string) => (
                        <span class="inline-flex items-center bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded-full">
                            {item}
                        </span>
                    ))}
                    {box.items.length > 3 && (
                        <span class="text-gray-400 text-xs">+{box.items.length - 3} more</span>
                    )}
                </>
            ) : (
                <span class="text-gray-400 text-xs">No items</span>
            )}
        </div>
    </div>
    
    <div class="border-t border-gray-100 bg-gray-50 p-3 rounded-b-xl flex justify-between items-center">
        <button 
            data-id={box.id} 
            data-action="view" 
            class="text-sm text-blue-600 hover:text-blue-800 font-medium"
        >
            View details
        </button>
        <div class="flex gap-2">
            <button 
                data-id={box.id} 
                data-action="qr" 
                class="text-sm bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded-md"
            >
                Show QR
            </button>
            <button 
                data-id={box.id} 
                data-name={box.name} 
                data-action="delete" 
                class="text-sm bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded-md"
            >
                Delete
            </button>
        </div>
    </div>
</div>
